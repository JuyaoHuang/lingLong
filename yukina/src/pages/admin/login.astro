---
/**
 * Admin Login Page
 * Hidden admin entry point
 * 
  * 管理员登录页面
  * 隐藏的管理员入口
 */
---

<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Login</title>
  <style>
    body {
      margin: 0;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .login-container {
      background: white;
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 10px 10px -5px rgb(0 0 0 / 0.04);
      width: 100%;
      max-width: 400px;
    }

    .login-header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .login-title {
      font-size: 1.875rem;
      font-weight: 700;
      color: #1f2937;
      margin: 0;
    }

    .login-subtitle {
      color: #6b7280;
      margin-top: 0.5rem;
      font-size: 0.875rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-label {
      display: block;
      font-size: 0.875rem;
      font-weight: 500;
      color: #374151;
      margin-bottom: 0.5rem;
    }

    .form-input {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 1rem;
      transition: border-color 0.2s, box-shadow 0.2s;
      box-sizing: border-box;
    }

    .form-input:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 3px rgb(59 130 246 / 0.1);
    }

    .login-button {
      width: 100%;
      background: #3b82f6;
      color: white;
      padding: 0.75rem;
      border: none;
      border-radius: 6px;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .login-button:hover {
      background: #2563eb;
    }

    .login-button:disabled {
      background: #9ca3af;
      cursor: not-allowed;
    }

    .error-message {
      background: #fef2f2;
      border: 1px solid #fecaca;
      color: #dc2626;
      padding: 0.75rem;
      border-radius: 6px;
      font-size: 0.875rem;
      margin-bottom: 1rem;
      display: none;
    }

    .loading-spinner {
      display: inline-block;
      width: 1rem;
      height: 1rem;
      border: 2px solid #ffffff;
      border-radius: 50%;
      border-top-color: transparent;
      animation: spin 1s ease-in-out infinite;
      margin-right: 0.5rem;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    @media (max-width: 480px) {
      .login-container {
        margin: 1rem;
        padding: 1.5rem;
      }
    }
  </style>
</head>

<body>
  <div class="login-container">
    <div class="login-header">
      <h1 class="login-title">Admin Panel</h1>
      <p class="login-subtitle">Sign in to manage your blog</p>
    </div>

    <div id="error-message" class="error-message"></div>

    <form id="login-form">
      <div class="form-group">
        <label for="username" class="form-label">Username</label>
        <input
          type="text"
          id="username"
          name="username"
          class="form-input"
          required
          autocomplete="username"
        />
      </div>

      <div class="form-group">
        <label for="password" class="form-label">Password</label>
        <input
          type="password"
          id="password"
          name="password"
          class="form-input"
          required
          autocomplete="current-password"
        />
      </div>

      <button type="submit" id="login-button" class="login-button">
        <span id="button-text">Sign In</span>
      </button>
    </form>
  </div>

  <script>
    // Check if already logged in
    if (localStorage.getItem('admin_token')) {
      window.location.href = '/admin/dashboard';
    }

    const loginForm = document.getElementById('login-form') as HTMLFormElement | null;
    const errorMessage = document.getElementById('error-message') as HTMLElement | null;
    const loginButton = document.getElementById('login-button') as HTMLButtonElement | null;
    const buttonText = document.getElementById('button-text') as HTMLElement | null;

    function showError(message: string): void {
      if (errorMessage) {
        errorMessage.textContent = message;
        errorMessage.style.display = 'block';
      }
    }

    function hideError(): void {
      if (errorMessage) {
        errorMessage.style.display = 'none';
      }
    }

    function setLoading(loading: boolean): void {
      if (loginButton) {
        loginButton.disabled = loading;
      }
      if (buttonText) {
        if (loading) {
          buttonText.innerHTML = '<span class="loading-spinner"></span>Signing in...';
        } else {
          buttonText.textContent = 'Sign In';
        }
      }
    }

    if (loginForm) {
      loginForm.addEventListener('submit', async (e: Event) => {
        e.preventDefault();

        hideError();
        setLoading(true);

        const usernameInput = document.getElementById('username') as HTMLInputElement | null;
        const passwordInput = document.getElementById('password') as HTMLInputElement | null;

        if (!usernameInput || !passwordInput) {
          showError('Form elements not found');
          setLoading(false);
          return;
        }

        const formData = new FormData();
        formData.append('username', usernameInput.value);
        formData.append('password', passwordInput.value);

        try {
          // 使用相对路径，请求会通过Nginx代理到backend
          // 在生产环境中，前端和后端通过同一个域名（Nginx代理）提供服务
          // 相对路径/token会被Nginx转发到FastAPI服务
          const response = await fetch('/token', {
            method: 'POST',
            body: formData,
          });

          if (response.ok) {
            const data = await response.json();
            localStorage.setItem('admin_token', data.access_token);
            window.location.href = '/admin/dashboard';
          } else {
            showError('Invalid username or password');
          }
        } catch (error) {
          console.error('Login error:', error);
          showError('Connection error. Please try again.');
        } finally {
          setLoading(false);
        }
      });
    }
  </script>
</body>
</html>